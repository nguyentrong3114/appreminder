import 'package:flutter/material.dart';

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const HealthyEatingScreen(),
    );
  }
}

class HealthyEatingScreen extends StatelessWidget {
  const HealthyEatingScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey.shade200,
      appBar: AppBar(
        backgroundColor: Colors.transparent,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.green),
          onPressed: () => Navigator.pop(context),
        ),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Header card
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(20.0),
                decoration: BoxDecoration(
                  color: Colors.orange.shade200,
                  borderRadius: BorderRadius.circular(20),
                ),
                child: Row(
                  children: [
                    Expanded(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: const [
                          Text(
                            'ƒÇn Ngon S·ªëng Kh·ªèe',
                            style: TextStyle(
                              fontSize: 28,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          SizedBox(height: 10),
                          Text(
                            'ƒÇn u·ªëng l√†nh m·∫°nh l√† v·ªÅ s·ª± c√¢n b·∫±ng v√† ƒë·∫£m b·∫£o r·∫±ng c∆° th·ªÉ b·∫°n nh·∫≠n ƒë·ªß d∆∞·ª°ng ch·∫•t c·∫ßn thi·∫øt ƒë·ªÉ ho·∫°t ƒë·ªông t·ªët.üòäü•¶',
                            style: TextStyle(fontSize: 16),
                          ),
                        ],
                      ),
                    ),
                    SizedBox(width: 10),
                    Column(
                      children: [
                        Image.asset(
                          'assets/images/cat_fish.png',
                          width: 150,
                          height: 150,
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 20),

              // List of tips
              _buildTipItem(
                icon: Icons.coffee_outlined,
                title: 'B·∫Øt ƒë·∫ßu ng√†y m·ªõi th·∫≠t tr√†n ƒë·∫ßy nƒÉng l∆∞·ª£ng',
                description:
                    'B·ªØa s√°ng gi√∫p b·∫°n t·ªânh t√°o h∆°n, t·∫≠p trung h∆°n v√† vui v·∫ª h∆°n! üòäüçûü•ë',
              ),
              _buildTipItem(
                icon: Icons.restaurant_outlined,
                title: 'H·ªôp c∆°m mang theo',
                description:
                    'Cung c·∫•p nƒÉng l∆∞·ª£ng v√† d∆∞·ª°ng ch·∫•t ƒë·ªÉ b·∫°n ti·∫øp t·ª•c tr√†n ƒë·∫ßy s·ª©c s·ªëng su·ªët bu·ªïi chi·ªÅu! ‚ö°ü•óüòä',
              ),
              _buildTipItem(
                icon: Icons.set_meal_outlined,
                title: 'Th√™m c√° v√†o b·ªØa ƒÉn n√†o',
                description:
                    'L√† ngu·ªìn cung c·∫•p Omega-3 quan tr·ªçng cho c∆° th·ªÉ! üêüüíô‚ú®',
              ),
              _buildTipItem(
                icon: Icons.lunch_dining_outlined,
                title: 'Th·ªãt b√≤, ngon v√† ƒë·∫ßy dinh d∆∞·ª°ng',
                description:
                    "L√† ngu·ªìn cung c·∫•p tuy·ªát v·ªùi c·ªßa s·∫Øt, k·∫Ωm, niacin, riboflavin, vitamin B12 v√† thiamine! üí™ü•©‚ú®",
              ),
              _buildTipItem(
                icon: Icons.medication_outlined,
                title: 'B·ªï sung vitamin m·ªói ng√†y nh√©',
                description: 'Gi·∫£m cƒÉng th·∫≥ng v√† lo √¢u! üòåüåø‚ú®',
              ),
              _buildTipItem(
                icon: Icons.cake_outlined,
                title: 'Nh√¢m nhi ch√∫t b√°nh cho vui nha',
                description: 'Gi√∫p ti√™u h√≥a t·ªët h∆°n! üòäüçÉ‚ú®',
              ),
              _buildTipItem(
                icon: Icons.coffee_outlined,
                title: 'M·ªôt t√°ch tr√† m·ªói ng√†y',
                description:
                    'Tr√† c√≥ th·ªÉ gi√∫p gi·∫£m nguy c∆° ƒëau tim v√† ƒë·ªôt qu·ªµ! üçµüíö‚ú®',
              ),
              const SizedBox(height: 20),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTipItem({
    required IconData icon,
    required String title,
    required String description,
  }) {
    return Container(
      margin: const EdgeInsets.only(bottom: 16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(15),
      ),
      child: Row(
        children: [
          Container(
            width: 10,
            height: 80,
            decoration: BoxDecoration(
              color: Colors.orange.shade200,
              borderRadius: const BorderRadius.only(
                topLeft: Radius.circular(15),
                bottomLeft: Radius.circular(15),
              ),
            ),
          ),
          Container(
            width: 60,
            height: 60,
            padding: const EdgeInsets.all(10),
            margin: const EdgeInsets.symmetric(horizontal: 10),
            decoration: BoxDecoration(
              color: Colors.orange.shade100,
              shape: BoxShape.circle,
            ),
            child: Icon(icon, color: Colors.orange),
          ),
          Expanded(
            child: Padding(
              padding: const EdgeInsets.symmetric(vertical: 12.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    title,
                    style: const TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  const SizedBox(height: 4),
                  Text(
                    description,
                    style: TextStyle(fontSize: 14, color: Colors.grey.shade700),
                  ),
                ],
              ),
            ),
          ),
          Container(
            margin: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.orange.shade200,
              shape: BoxShape.circle,
            ),
            child: const Icon(Icons.add, color: Colors.white),
          ),
        ],
      ),
    );
  }
}
